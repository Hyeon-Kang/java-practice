예제1

	class Point { int x, y; }
	class ColoredPoint extends Point { int color; }
	final class Colored3dPoint extends ColoredPoint { int z; }

	public class in_01{
	   public static void main(String[] args) throws Exception{
		Point p = new Point();
		ColoredPoint cp = new ColoredPoint();
		Colored3dPoint c3dp = new Colored3dPoint();
		System.out.println("p.x = " + p.x);
		System.out.println("cp.x = " + cp.x);
		System.out.println("c3dp.x = " + c3dp.x);
		//System.out.println("p.color = " + p.color); //compile error
		System.out.println("c3dp.color = " + c3dp.color); 
		System.out.println("c3dp.color = " + c3dp.z); 
	   }
	}



==================================================================
예제2

class A {
	 int aa = 1;
	 private int bb = 10;  //상속 안 됨
	 int cc = 2;
	 public void print(){
	    System.out.println("aa= " + aa + ",bb="+bb + ",cc="+cc);  
	 }
	}
	class B extends A {
	  int dd = 4;
	}
	class C extends B {
	  int ee = 3;
	  int aa = 10; // A에서 상속 받은 변수 aa 를 사용하지 못함(상위멤버 숨김)
	}
	class in_02 {
	  public static void main(String[] args) {
	    C objc = new C();
	    System.out.println("objc객체 aa의 값은 "  + objc.aa);  //클래스 C에 정의된 aa  
//	    System.out.println("objc객체 bb의 값은 "  + objc.bb); // private 이므로 상속 안됨(comlpile error) 
	    System.out.println("objc객체 cc의 값은 "   + objc.cc); //클래스 A에서 상속  
	    System.out.println("objc객체 dd의 값은 "   + objc.dd); //클래스 B에서 상속   
	    System.out.println("objc객체 ee의 값은 "   + objc.ee); //클래스 C에 정의된 ee 
	    objc.print();  //클래스 A에서 상속
	  }
	}


======================================================================
3

class Super
{
  int x1=100;
  int x2=200;
  private int y=300;
  static int z = 400;
  void print(){
    System.out.println("x1 = " + x1 + " x2 = " + x2 + " y = " + y + " z = "+ z);  
  }
}
class Sub extends Super
{
  int x2 = 1000;
}
public class InheritanceTest1{
   public static void main(String[] args) {
 Super s1 = new Super(); // S1 클래스 생성
 System.out.println("s1.x1 = " + s1.x1); // s1의 x1출력
 System.out.println("s1.x2 = " + s1.x2); // s1의 x2출력
 //System.out.println("s1.y = " + s1.y); //private 접근제한자 이므로 상속 불가
 System.out.println("s1.z = " + s1.z); //Super 클래스의 static 변수 z 출력
 s1.print(); // s1의 모든 정보 출력
 
 Sub s2 = new Sub(); //부모클래스 Super로부터 확장한 Sub 클래스 s2 생성
 System.out.println("s2.x1 = " + s2.x1); // s2클래스의 x1 출력
 System.out.println("s2.x2 = " + s2.x2); // s2클래스의 x2 출력
// System.out.println("s2.y = " + s2.y); //private 접근제한자 이므로 상속 불가
 System.out.println("s2.z = " + s2.z); // s2클래스의 z출력
 s2.print(); // s2클래스의 모든 정보 출력
   }
}


================================================================
4

import java.text.*;
class Shape{
  protected  double  x;
  protected  double  y;
  protected  String type;
 
  public Shape()
  {
    this("Shape",1,1);
  }
  public Shape(String type, double x, double y)
  {
    this.type = type;
    this.x = x;    this.y = y;
  }
  public String toString()
  {
    return "type : " + type + " ("+ x + "," + y + ")";
  }
}
class Circle extends Shape
{
  private double radius;
  public Circle(double x, double y, double radius)
  {
    super("Circle", x, y);    // Shape의 기본 구조를 상속받아 사용
    this.radius = radius;	  // Circle에서 추가되는 변수
  }
  public String toString()
  {
    DecimalFormat df=new DecimalFormat("###.##"); //출력 형태 지정
    return super.toString() + " Radius : " + df.format(radius) + " Area : " + df.format (getArea());
  }
  public double getArea(){
   return  radius * radius * Math.PI;
  }
}  
class Rectangle extends Shape
{
  private double width;
  private double height;
  public Rectangle (double x, double y, double w, double h)
  {
    super("Rectangle", x, y);    // Shape로부터 상속받아 사용
    this.width = w; // Rectangle에서 확장한(추가한) 변수
    this.height = h; // Rectangle에서 확장한(추가한) 변수
  }
  public double getArea(){
   return  width * height;
  }
  public String toString()
  {
    return super.toString() + " Width : " + width + " Height : " + height + " Area : " +  getArea();
  }
}  
public class InheritanceTest2{
   public static void main(String[] args){
    Shape s = new Shape(); //Shape 클래스 s 생성
        Circle c = new Circle(30, 40, 50); // Shape 확장 클래스 Circle c 생성 및 값 전달
        Rectangle r = new Rectangle(60, 70, 100, 200); // Shape 확장 클래스 Rectangle r 생성 및 값 전달
 System.out.println(s);  System.out.println(c);  System.out.println(r); //각 클래스 출력    
     }
}


